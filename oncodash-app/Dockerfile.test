FROM node:16-alpine as build

# Add Tini. Checkout github
# https://github.com/krallin/tini
RUN apk add --no-cache tini
ENTRYPOINT ["/sbin/tini", "--"]

# set our node environment, either development or production
# defaults to development, switch to prouction when needed
ARG NODE_ENV=development
ENV NODE_ENV $NODE_ENV

# Get latest npm
RUN npm i npm@latest -g

# install dependencies outside oncodash root for easier app bind mounting for local dev
# due to default /opt permissions we have to create the dir with root and change perms
RUN mkdir /var/www/ && chown node:node /var/www/
WORKDIR /var/www

# Manually change to unprivilegded non-root user provided by the node official image
# and copy package.json files to the /opt/oncodash/, install packages and set PATH var
USER node
COPY --chown=node:node package.json package-lock.json* ./
RUN npm install --no-optional && npm cache clean --force
# ENV PATH /var/www/node_modules/.bin:$PATH

# Copy in the source code
RUN mkdir /var/www/oncodash-app && chown node:node /var/www/oncodash-app
WORKDIR /var/www/oncodash-app
COPY --chown=node:node . .
RUN npm run build

# multi-stage build..
# Run the proxy nginx server
FROM nginx:alpine
COPY --chown=nginx:nginx ./nginx/nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=build --chown=nginx:nginx /var/www/ /usr/share/nginx/html/
ENV PATH /usr/share/nginx/html/node_modules/.bin:$PATH